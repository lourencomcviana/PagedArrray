{"version":3,"sources":["../src/PagedArray.ts"],"names":[],"mappings":"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","file":"PagedArray.js","sourcesContent":["// export function sayHello(name: string) {\n//     return `Hello from ${name}`;\n// }\n\n\n// export function another (name: string) {\n//     return `Hasassaas ${name}`;\n// }\nimport Promise =require( 'bluebird');\n\nimport * as ProgressBar from \"progress\";\n\n\ninterface ItemRange{\n  readonly min:number,\n  readonly max:number\n}\ninterface PageInfo{\n  readonly parameters:Array<any> ;\n  readonly pageSize:number;\n  readonly pageCurrent:number;\n  readonly pageTotal:number;\n  readonly pageItemRange:ItemRange;\n  readonly pageStart:number;\n  readonly pageEnd:number;\n}\n\n\ninterface RunFunction{\n    (parameter: any, info?:PageInfo):string |number | object | Promise<any>;\n}\ninterface ProgressFunction{\n    (data: any):void;\n}\n\ninterface Options{\n    [index: string]: any;\n    size?:number;\n    run:RunFunction;\n    //Will replace with Progress later, converting to typescript\n    progress?:ProgressFunction;\n}\n\n\ninterface Config extends Options{\n   current:number;\n}\n\nfunction instanceOfRunFunction(object: any): object is RunFunction{\n    return true;\n}\n\n//temporario\nclass Progress{\n    constructor(fun :ProgressFunction){\n\n    }\n\n    start=function(le:number){};\n    run=function(){};\n    show=function(){};\n}\n\nexport default class PagedArray extends Array implements PageInfo {\n  \n    private config :Config;\n    private parameterList :Array<any> ;\n\n    constructor(parameterList :Array<any> ,options:Options|RunFunction) {\n      super();\n      this.config=<Config>PagedArray.ProcessOptions(options);\n\n      this.config.current=0;\n\n      this.parameterList=parameterList;\n\n    }\n    \n    private genInfo():PageInfo{\n      return {\n        parameters:this.parameters,\n        pageSize:this.pageSize,\n        pageCurrent:this.pageCurrent,\n        pageTotal:this.pageTotal,\n        pageItemRange:this.pageItemRange,\n        pageStart:this.pageStart,\n        pageEnd:this.pageEnd\n      }\n    }\n\n    static ProcessOptions(options:Options|RunFunction) :Options{\n      let model:Options={\n        size:100,\n        run:undefined,\n        progress:undefined,\n      };\n      \n      if(typeof options=='function'){\n        model.run=options;\n      } else if(typeof options=='object'){\n        options=<Options>options;\n\n        for(var id in model){\n          if(!options[id]) options[id]=model[id];\n        }\n        return options;\n      }\n      return model;\n    }\n\n    get parameters() {\n        return this.parameterList;\n    }\n\n    get pageSize() {\n        return this.config.size;\n    }\n\n    get pageCurrent() {\n        return this.config.current;\n    }\n\n    get pageTotal() {\n        return Math.ceil(this.parameters.length/this.pageSize);\n    }\n    \n    get pageItemRange() {\n      let itemSize=this.pageSize*this.pageCurrent\n        return{\n          min:itemSize,\n          max:itemSize+this.pageSize\n        };\n    }\n\n    get pageStart() {\n      return this.pageSize*this.pageCurrent;\n\n    }\n\n    get pageEnd() {\n      let end=this.pageStart+this.pageSize;\n      return end>this.parameters.length?this.parameters.length:end;\n    }\n\n    hasNext(){\n      return (this.pageCurrent<this.pageTotal-1)\n    }\n\n    hasPrevious(){\n      return (this.pageCurrent>0)\n    }\n    \n    next(){\n      if(this.hasNext()){\n        this.config.current++;\n        this.load();\n        return true;\n      }\n      return false;\n    }\n\n\n    previous(){\n      if(this.hasPrevious()){\n        this.config.current--;\n        this.load();\n        return true;\n      }\n      return false;\n    }\n\n    load(progress?:Progress|ProgressFunction){\n      this.length = 0;\n      if(!progress || typeof(progress)=='function')\n        progress = new Progress(this.config.progress)\n      progress=<Progress>progress;\n\n      progress.start(this.pageEnd-this.pageStart);    \n\n      for(let idItem=this.pageStart;idItem<this.pageEnd;idItem++){\n        let result:string |number | object | Promise<any>;\n\n        try{\n          result = this.config.run(this.parameterList[idItem],this.genInfo());//fs.readprametersync(this.prameters[idItem]);\n        }catch(e){\n          result = e;\n        }\n\n\n        this.push(result);\n        progress.run();\n      }\n    }\n\n    forEach(callbackfn:any,thisArg?:any){\n      \n      function recursivePromise(arr:PagedArray){\n        //walk from page to page\n        Promise.all(arr)\n        .then(function(data){\n          data.forEach(callbackfn,thisArg)\n          if(arr.next()){\n            recursivePromise(arr);\n          }\n        });\n      }\n      this.config.current=0;\n      //run all parameters\n      let progress = new Progress(this.config.progress);\n\n      progress.start(this.parameters.length); \n      this.load();\n\n      \n      recursivePromise(this);\n    };\n  }"]}